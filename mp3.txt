package com.arihant.jain.arihant;

import android.Manifest;
import android.app.Activity;
import android.content.pm.PackageManager;
import android.os.Build;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;
import java.io.File;
import java.io.*;

public class MainActivity extends AppCompatActivity implements Runnable
{
    EditText e1;
    ProgressBar progressBar;
    Thread t;
    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        askForPermission();
        e1 = (EditText)findViewById(R.id.editText);
        t = new Thread(this);
    }

    public void btnClick(View v) throws IOException {
        int ch = e1.getText().length();
        int i = 0;
        if (v.getId() == R.id.button)
        {
            try {
                FileOutputStream fos1 = new FileOutputStream("/storage/emulated/0/abc.txt");
                while (i <= ch - 1) {
                    fos1.write(e1.getText().charAt(i));
                    i++;
                }
                Toast.makeText(this, e1.getText(), Toast.LENGTH_LONG).show();

            }
            catch(Exception e){
            }
        }
        if (v.getId() == R.id.button2)
        {
            t.start();
        }
    }

    public void askForPermission()
    {
        if(ActivityCompat.checkSelfPermission
                (this, Manifest.permission.READ_EXTERNAL_STORAGE)
                != PackageManager.PERMISSION_GRANTED
                && ActivityCompat.checkSelfPermission
                (this, Manifest.permission.WRITE_EXTERNAL_STORAGE)
                != PackageManager.PERMISSION_GRANTED)
        {
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
            {
                requestPermissions(new String[] {Manifest.permission.READ_EXTERNAL_STORAGE,
                        Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
            }
        }
    }

    @Override
    public void run()
    {
        try
        {
            File f = new File("/storage/emulated/0/UCDownloads/abc.mp3");
            FileInputStream fis = new FileInputStream(f);
            BufferedInputStream bis = new BufferedInputStream(fis);
            File f1 = new File("/storage/emulated/0/xyz1.mp3");
            File f2 = new File("/storage/emulated/0/xyz2.mp3");
            FileOutputStream fos1 = new FileOutputStream(f1);
            FileOutputStream fos2= new FileOutputStream(f2);
            int b = 0;
            while((f.length()/2) != f1.length() && (b = bis.read()) != -1)
            {
                fos1.write(b);
            }
            fos1.close();
            fis.skip(fis.available()/2);
            int d = 0;
            while((d = fis.read()) != -1)
            {
                fos2.write(d);
            }
            fos2.close();
            bis.close();
        }
        catch( Exception e) {}
    }
}
